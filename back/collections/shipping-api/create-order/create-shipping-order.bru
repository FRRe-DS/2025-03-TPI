meta {
  name: Create Shipping Order
  type: http
  seq: 1
}

post {
  url: http://localhost:3000/shipping
  body: json
  auth: none
}

headers {
  Content-Type: application/json
}

body:json {
  {
  "user_id": 1,
  "order_id": 12345,
  "delivery_address": {
    "street": "Av. Corrientes 1234",
    "city": "Buenos Aires",
    "state": "CABA",
    "country": "Argentina",
    "postalCode": 1043
  },
  "transport_type": "air",
  "products": [
    {
      "productId": 101,
      "quantity": 2
    },
    {
      "productId": 202,
      "quantity": 1
    }
  ]
}
}

docs {
  # Create Shipping Order
  
  Creates a new shipping order in the system.
  
  ## Request Body
  
  ### Required Fields
  - `orderId` (number): The order ID (min: 1)
  - `userId` (number): The user ID (min: 1)
  - `deliveryAddress` (object): Delivery address details
    - `street` (string): Street address
    - `city` (string): City name
    - `state` (string): State/Province
    - `country` (string): Country code
    - `postalCode` (string): Postal/ZIP code
  - `transport` (object): Transport method
    - `type` (string): One of: 'air', 'sea', 'road', 'rail'
  - `products` (array): List of products
    - `id` (number): Product ID (min: 1)
    - `quantity` (number): Quantity (min: 1)
  
  ## Response
  Returns a success message with the created order details.
  
  ## Example Response
  ```json
  {
    "message": "Shipping order created successfully",
    "order": {
      "orderId": 1,
      "userId": 1,
      "deliveryAddress": {
        "street": "Av. Siempre Viva 742",
        "city": "Springfield",
        "state": "Illinois",
        "country": "US",
        "postalCode": "62704"
      },
      "transport": {
        "type": "road"
      },
      "products": [
        {
          "id": 1,
          "quantity": 2
        }
      ]
    }
  }
  ```
  
  ## Validation Rules
  - All address fields are required and must be non-empty strings
  - Transport type must be one of: 'air', 'sea', 'road', 'rail'
  - Product IDs and quantities must be integers >= 1
}

